<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        ">

    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!--单个realm使用realm,如果有多个realm，使用realms属性代替-->
        <property name="realm" ref="shiroRealm" />
        <!-- <property name="cacheManager" ref="shiroEhcacheManager" /> -->
    </bean>

    <!--realm配置，realm是shiro的桥梁，它主要是用来判断subject是否可以登录及权限等-->
    <bean id="shiroRealm" class="com.wang.auth.DbRealm">

    </bean>


    <!--shiro过滤器配置，bean的id值须与web中的filter-name的值相同-->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager" />
        <!-- 没有权限或者失败后跳转的页面 -->
        <property name="loginUrl" value="/login.jsp" />
        <property name="successUrl" value="/loginSuccess.jsp" />
        <property name="unauthorizedUrl" value="/unAuthorization.jsp" />
        <property name="filterChainDefinitions">
            <value>
                /logout = logout
                /admin/login =anon
                /user/** = authc
                /admin/** = authc,roles[admin]
            </value>
        </property>
    </bean>

    <!-- 用户授权/认证信息Cache, 采用EhCache 缓存 -->
    <!--
    <bean id="shiroEhcacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManagerConfigFile" value="/WEB-INF/ehcache-shiro.xml" />
    </bean>
    -->

    <!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

    <!-- AOP式方法级权限检查  -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
        <property name="proxyTargetClass" value="true" />
    </bean>

    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>



    <!-- &lt;!&ndash; 权限管理器 &ndash;&gt;
     <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
         &lt;!&ndash; 数据库认证的实现 org.springrain.frame.shiro.ShiroDbRealm &ndash;&gt;
         <property name="realm" ref="shiroDbRealm" />
         &lt;!&ndash; session 管理器 &ndash;&gt;
         <property name="sessionManager" ref="sessionManager" />
         &lt;!&ndash; 缓存管理器 &ndash;&gt;
         <property name="cacheManager" ref="shiroCacheManager" />
     </bean>
     &lt;!&ndash; session管理器 &ndash;&gt;
     <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
         &lt;!&ndash; 超时时间 &ndash;&gt;
         <property name="globalSessionTimeout" value="1800000"/>
         &lt;!&ndash; session存储的实现 &ndash;&gt;
         <property name="sessionDAO" ref="shiroSessionDao"/>
         &lt;!&ndash; sessionIdCookie的实现,用于重写覆盖容器默认的JSESSIONID &ndash;&gt;
         <property name="sessionIdCookie" ref="sharesession"/>
         &lt;!&ndash; 定时检查失效的session &ndash;&gt;
         <property name="sessionValidationSchedulerEnabled" value="true" />
     </bean>

     &lt;!&ndash; sessionIdCookie的实现,用于重写覆盖容器默认的JSESSIONID &ndash;&gt;
     <bean id="sharesession" class="org.apache.shiro.web.servlet.SimpleCookie">
         &lt;!&ndash; cookie的name,对应的默认是 JSESSIONID &ndash;&gt;
         <constructor-arg name="name" value="SHAREJSESSIONID"/>
     </bean>
     &lt;!&ndash; session存储的实现 &ndash;&gt;
     <bean id="shiroSessionDao" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO" />

     &lt;!&ndash; 缓存管理实现 &ndash;&gt;
     <bean id="shiroCacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager" />

     &lt;!&ndash; shiro的主过滤器,beanId 和web.xml中配置的filter name需要保持一致 &ndash;&gt;
     <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean"
         >
         &lt;!&ndash; 安全管理器 &ndash;&gt;
         <property name="securityManager" ref="securityManager" />
         &lt;!&ndash; 默认的登陆访问url &ndash;&gt;
         <property name="loginUrl" value="/login" />
         &lt;!&ndash; 登陆成功后跳转的url &ndash;&gt;
         <property name="successUrl" value="/index" />
         &lt;!&ndash; 没有权限跳转的url &ndash;&gt;
         <property name="unauthorizedUrl" value="/unauth" />
         &lt;!&ndash; 访问地址的过滤规则,从上至下的优先级,如果有匹配的规则,就会返回,不会再进行匹配 &ndash;&gt;
         <property name="filterChainDefinitions">
             <value>
                 /js/** = anon
                 /css/** = anon
                 /images/** = anon
                 /myimg/**= anon
                 /unauth = anon
                 /getCaptcha=anon
                 /login = anon
                 /favicon.ico = anon
                 /index = user
                 /logout = logout
                 /menu/leftMenu=user
                 /**/ajax/** = user
                 /** = user,frameperms
             </value>
         </property>
         &lt;!&ndash; 声明自定义的过滤器 &ndash;&gt;

     </bean>
     &lt;!&ndash; 起效权限注解,这个很少在web项目中用到,一般是控制url的访问,不是在controller中声明权限注解 &ndash;&gt;
     <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />-->


</beans>